[versions]
agp = "8.2.2"
android-billingclient-billing = "6.2.0"
androidx-activityCompose = "1.8.2"
androidx-coreSplashscreen = "1.0.1"
androidx-appcompat = "1.6.1"
androidx-core-ktx = "1.12.0"
compose = "1.6.4"
compose-compiler = "1.5.11"  # not the same as compose version, IDE says not used, but _it is_ used via a .get() (why can't gradle see that?)
compose-material3 = "1.2.1"  # not the same as compose
compose-material-icons-extended = "1.6.1"  # usually the same as compose, and seems to lag behind.
compose-uiToolingPreview = "1.6.1"  # usually the same as compose, and seems to lag behind.
google-MapsAndroidComposeVersion = "3.1.0"
google-PlayServicesAndroidLocation = "21.2.0"
google-PlayServicesAndroidMaps = "18.2.0"
google-FirebaseBom = "32.8.0"
google-FirebaseAppdistribution = "16.0.0-beta12"
logger-kermit = "2.0.1"
kamelImage = "0.9.4"
kMutliplatformSettingsVersion = "1.1.1"
kotlin = "1.9.23" # Must also be updated in gradle.properties
kotlinx-CoroutinesCore = "1.8.0"
kotlinx-Datetime = "0.5.0"
kotlinx-SerializationJson = "1.6.3"
kotlinx-atomicfu = "0.23.2"
ksoupVersion = "0.2.1"
ktor-ClientCore = "2.3.9"
ktor-ClientAndroid = "2.2.4"
logger-Slf4jNop = "2.0.9"
pods-google-maps = "8.4.0"  # IDE says not used, but _it is_ used via a .get() (why can't gradle see that?)
pods-google-mapsUtils = "4.2.2" # IDE says not used, but _it is_ used via a .get() (why can't gradle see that?)


[libraries]
android-billingclient-billing = { module = "com.android.billingclient:billing", version.ref = "android-billingclient-billing" }
android-billingclient-billing-ktx = { module = "com.android.billingclient:billing-ktx", version.ref = "android-billingclient-billing" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "androidx-coreSplashscreen" }
androidx-ui-graphics-android = { group = "androidx.compose.ui", name = "ui-graphics-android", version.ref = "compose" }
atomicfu-gradle-plugin = { module = "org.jetbrains.kotlinx:atomicfu-gradle-plugin", version.ref = "kotlinx-atomicfu" }
compose-material-icons-extended = { module = "org.jetbrains.compose.material:material-icons-extended", version.ref = "compose-material-icons-extended" }
compose-ui-tooling = { module = "org.jetbrains.compose.ui:ui-tooling", version.ref = "compose-uiToolingPreview" }
compose-ui-tooling-preview = { module = "org.jetbrains.compose.ui:ui-tooling-preview", version.ref = "compose-uiToolingPreview" }
google-firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "google-FirebaseBom" }
google-firebase-analytics-ktx = { module = "com.google.firebase:firebase-analytics-ktx", version = "" } # no version needed
google-firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics", version = "" } # no version needed
google-firebase-appdistribution-api-ktx = { module = "com.google.firebase:firebase-appdistribution-api-ktx", version.ref="google-FirebaseAppdistribution" }
google-firebase-appdistribution = { module = "com.google.firebase:firebase-appdistribution", version.ref = "google-FirebaseAppdistribution" }
google-maps-android-compose = { module = "com.google.maps.android:maps-compose", version.ref = "google-MapsAndroidComposeVersion" }
google-maps-android-compose-utils = { module = "com.google.maps.android:maps-compose-utils", version.ref = "google-MapsAndroidComposeVersion" }
google-play-services-android-location = { module = "com.google.android.gms:play-services-location", version.ref = "google-PlayServicesAndroidLocation" }
google-play-services-android-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "google-PlayServicesAndroidMaps" }
kamel-image = { module = "media.kamel:kamel-image", version.ref = "kamelImage" }
logger-kermit = { module = "co.touchlab:kermit", version.ref = "logger-kermit" }
logger-kermit-crashlytics = { module = "co.touchlab:kermit-crashlytics", version.ref = "logger-kermit" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-CoroutinesCore" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-Datetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-SerializationJson" }
kotlinx-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "kotlinx-atomicfu" }
ksoup-entites = { module = "com.mohamedrejeb.ksoup:ksoup-entites", version.ref = "ksoupVersion" }
ksoup-html = { module = "com.mohamedrejeb.ksoup:ksoup-html", version.ref = "ksoupVersion" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor-ClientAndroid" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor-ClientAndroid" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor-ClientAndroid" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor-ClientCore" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor-ClientAndroid" }
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "kMutliplatformSettingsVersion" }
multiplatform-settings-no-arg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "kMutliplatformSettingsVersion" }
multiplatform-settings-test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "kMutliplatformSettingsVersion" }
logger-slf4j-nop = { module = "org.slf4j:slf4j-nop", version.ref = "logger-Slf4jNop" }
